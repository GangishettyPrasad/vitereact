import React from 'react';

const ReactArrayMethods = () => {
  return (
    <div style={{ padding: '2rem', fontFamily: 'Segoe UI, sans-serif', backgroundColor: '#f9f9f9' }}>
      <h2 style={{ color: '#0070f3' }}>‚öõÔ∏è React ‡∞≤‡±ã map, filter, find, Spread Operator & Destructuring ‚Äì Visual Guide </h2>

      {/* map */}
      <h3 style={{ color: '#0c7a6f' }}>1Ô∏è‚É£ map()</h3>
      <p><strong>‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç:</strong> Array ‡∞®‡∞ø iterate ‡∞ö‡±á‡∞∏‡∞ø, ‡∞™‡±ç‡∞∞‡∞§‡∞ø element ‡∞®‡∞ø UI ‡∞≤‡±ã ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø.</p>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const names = ['Ravi', 'Sita', 'Krishna'];

return (
  <ul>
    {names.map(name => (
      <li key={name}>{name}</li>
    ))}
  </ul>
);
        `}</code>
      </pre>
      <p><strong>Output:</strong></p>
      <ul>
        <li>Ravi</li>
        <li>Sita</li>
        <li>Krishna</li>
      </ul>
      <p>üëâ <strong>JSX ‡∞≤‡±ã `map` ‡∞µ‡∞æ‡∞°‡∞ø dynamic data ‡∞®‡∞ø loop ‡∞ö‡±á‡∞∏‡∞ø ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞µ‡∞ö‡±ç‡∞ö‡±Å.</strong></p>

      {/* filter */}
      <h3 style={{ color: '#0c7a6f' }}>2Ô∏è‚É£ filter()</h3>
      <p><strong>‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç:</strong> Array ‡∞®‡±Å‡∞Ç‡∞°‡∞ø ‡∞ï‡±ä‡∞®‡±ç‡∞®‡∞ø elements ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞æ‡∞≤‡∞ø ‡∞Ö‡∞Ç‡∞ü‡±á.</p>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const users = [
  { name: 'Ravi', age: 25 },
  { name: 'Teja', age: 32 }
];

const young = users.filter(user => user.age < 30);
        `}</code>
      </pre>
      <p>üëâ <strong>Condition-based filtering UI ‡∞ï‡∞ø ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Æ‡±à‡∞® data ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø.</strong></p>

      {/* find */}
      <h3 style={{ color: '#0c7a6f' }}>3Ô∏è‚É£ find()</h3>
      <p><strong>‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç:</strong> ‡∞í‡∞ï‡±á ‡∞í‡∞ï‡±ç‡∞ï item ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Ç ‡∞Ö‡∞Ø‡∞ø‡∞§‡±á, array ‡∞≤‡±ã search ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø.</p>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const users = [
  { name: 'Ravi', age: 25 },
  { name: 'Teja', age: 32 }
];

const foundUser = users.find(user => user.name === 'Teja');
        `}</code>
      </pre>
      <p>üëâ <strong>`find()` ‡∞§‡±ã ‡∞í‡∞ï‡±á ‡∞í‡∞ï‡±ç‡∞ï object/item ‡∞™‡±ä‡∞Ç‡∞¶‡∞µ‡∞ö‡±ç‡∞ö‡±Å.</strong></p>

      {/* spread */}
      <h3 style={{ color: '#0c7a6f' }}>4Ô∏è‚É£ Spread Operator (...)</h3>
      <p><strong>‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç:</strong> Array/Object ‡∞≤‡±ã ‡∞ï‡±ä‡∞§‡±ç‡∞§ data ‡∞®‡∞ø ‡∞ï‡∞≤‡∞™‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø, ‡∞≤‡±á‡∞¶‡∞æ clone ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø.</p>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const oldArray = [1, 2];
const newArray = [...oldArray, 3]; // [1, 2, 3]

const oldUser = { name: 'Ravi' };
const newUser = { ...oldUser, age: 25 }; // { name: 'Ravi', age: 25 }
        `}</code>
      </pre>
      <p>üëâ <strong>React ‡∞≤‡±ã state update ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞é‡∞ï‡±ç‡∞ï‡±Å‡∞µ‡∞ó‡∞æ spread ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç.</strong></p>

      {/* destructuring */}
      <h3 style={{ color: '#0c7a6f' }}>5Ô∏è‚É£ Destructuring</h3>
      <p><strong>‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç:</strong> Object ‡∞≤‡±á‡∞¶‡∞æ Array ‡∞®‡±Å‡∞Ç‡∞°‡∞ø values ‡∞§‡±Ä‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø easy way.</p>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
// Object destructuring
const user = { name: 'Ravi', age: 25 };
const { name, age } = user;

// Array destructuring
const numbers = [10, 20];
const [first, second] = numbers;
        `}</code>
      </pre>
      <p>üëâ <strong>Cleaner code ‡∞ï‡±ã‡∞∏‡∞Ç destructuring ‡∞ö‡∞æ‡∞≤‡∞æ use ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.</strong></p>

      <h3 style={{ color: '#0070f3' }}>üìå Summary ‚Äì ‡∞é‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞è‡∞¶‡∞ø ‡∞µ‡∞æ‡∞°‡∞æ‡∞≤‡∞ø?</h3>
      <ul>
        <li><strong>map()</strong> ‚Äì JSX ‡∞≤‡±ã List render ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø ‡∞Ö‡∞Ç‡∞ü‡±á</li>
        <li><strong>filter()</strong> ‚Äì Conditions apply ‡∞ö‡±á‡∞∏‡∞ø elements display ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø</li>
        <li><strong>find()</strong> ‚Äì ‡∞í‡∞ï object ‡∞≤‡±á‡∞¶‡∞æ value ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞ï‡∞æ‡∞µ‡∞æ‡∞≤‡∞ø</li>
        <li><strong>spread (...)</strong> ‚Äì Arrays/Objects merge ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø, update ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø</li>
        <li><strong>destructuring</strong> ‚Äì Data ‡∞®‡∞ø separate variables ‡∞≤‡±ã ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞æ‡∞≤‡∞ø</li>
      </ul>

      <h3 style={{ color: '#d35400' }}>üí° React Real-Time Use Cases:</h3>
      <ul>
        <li><code>map()</code> ‚Üí List of users, products, posts ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø</li>
        <li><code>filter()</code> ‚Üí Active users ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á, filtered data UI‡∞ï‡∞ø</li>
        <li><code>spread()</code> ‚Üí State update ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç‡∞≤‡±ã (immutability Ïú†ÏßÄ)</li>
        <li><code>destructuring</code> ‚Üí Props ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø, cleaner code ‡∞ï‡±ã‡∞∏‡∞Ç</li>
      </ul>
    </div>
  );
};

export default ReactArrayMethods;
