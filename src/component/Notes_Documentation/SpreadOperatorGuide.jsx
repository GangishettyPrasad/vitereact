import React from 'react';

const SpreadOperatorGuide = () => {
  return (
    <div style={{ padding: '2rem', fontFamily: 'Segoe UI, sans-serif', backgroundColor: '#f9f9f9' }}>
      <h2 style={{ color: '#0070f3' }}>üöÄ Spread Operator (...) in JavaScript & React ‚Äì Full Guide </h2>

      <p><strong>üëâ Spread Operator ‡∞Ö‡∞Ç‡∞ü‡±á:</strong> Array ‡∞≤‡±á‡∞¶‡∞æ Object ‡∞®‡∞ø expand ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø, clone ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞≤‡±á‡∞¶‡∞æ ‡∞ï‡±ä‡∞§‡±ç‡∞§ values ‡∞ï‡∞≤‡∞™‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞µ‡∞æ‡∞°‡±á JavaScript feature.</p>

      {/* 1. Clone Array */}
      <h3 style={{ color: '#0c7a6f' }}>1Ô∏è‚É£ Clone an Array</h3>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const arr1 = [1, 2, 3];
const arr2 = [...arr1]; // [1, 2, 3]
        `}</code>
      </pre>
      <p><strong>üìå Telugu:</strong> Original array ‡∞®‡±Å copy ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç.</p>

      {/* 2. Merge Arrays */}
      <h3 style={{ color: '#0c7a6f' }}>2Ô∏è‚É£ Merge Arrays</h3>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const a = [1, 2];
const b = [3, 4];
const merged = [...a, ...b]; // [1, 2, 3, 4]
        `}</code>
      </pre>
      <p><strong>üìå Telugu:</strong> ‡∞∞‡±Ü‡∞Ç‡∞°‡±Å ‡∞≤‡±á‡∞¶‡∞æ ‡∞é‡∞ï‡±ç‡∞ï‡±Å‡∞µ arrays ‡∞®‡∞ø ‡∞ï‡∞≤‡∞™‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø.</p>

      {/* 3. Add Elements to Array */}
      <h3 style={{ color: '#0c7a6f' }}>3Ô∏è‚É£ Add Elements while Copying</h3>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const numbers = [2, 3];
const result = [1, ...numbers, 4]; // [1, 2, 3, 4]
        `}</code>
      </pre>
      <p><strong>üìå Telugu:</strong> Existing array‡∞ï‡∞ø ‡∞ï‡±ä‡∞§‡±ç‡∞§ elements ‡∞ï‡∞≤‡∞™‡∞æ‡∞≤‡∞ø ‡∞Ö‡∞Ç‡∞ü‡±á.</p>

      {/* 4. Clone Object */}
      <h3 style={{ color: '#0c7a6f' }}>4Ô∏è‚É£ Clone an Object</h3>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const user = { name: 'Ravi', age: 25 };
const newUser = { ...user }; // { name: 'Ravi', age: 25 }
        `}</code>
      </pre>
      <p><strong>üìå Telugu:</strong> Object ‡∞®‡∞ø shallow copy ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø.</p>

      {/* 5. Merge Objects */}
      <h3 style={{ color: '#0c7a6f' }}>5Ô∏è‚É£ Merge Objects</h3>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const obj1 = { a: 1 };
const obj2 = { b: 2 };
const combined = { ...obj1, ...obj2 }; // { a: 1, b: 2 }
        `}</code>
      </pre>
      <p><strong>üìå Telugu:</strong> ‡∞∞‡±Ü‡∞Ç‡∞°‡±Å object values‡∞®‡∞ø ‡∞ï‡∞≤‡∞™‡∞°‡∞Ç.</p>

      {/* 6. Overriding Object Properties */}
      <h3 style={{ color: '#0c7a6f' }}>6Ô∏è‚É£ Override Object Properties</h3>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const user = { name: 'Ravi', age: 25 };
const updated = { ...user, age: 30 }; // { name: 'Ravi', age: 30 }
        `}</code>
      </pre>
      <p><strong>üìå Telugu:</strong> Object ‡∞≤‡±ã ‡∞ï‡±ä‡∞®‡±ç‡∞®‡∞ø properties override ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø ‡∞Ö‡∞Ç‡∞ü‡±á.</p>

      {/* 7. Spread in React State Update */}
      <h3 style={{ color: '#0c7a6f' }}>7Ô∏è‚É£ React State Update with Spread</h3>
      <pre style={{ background: '#f0f0f0', padding: '1rem' }}>
        <code>{`
const [user, setUser] = useState({ name: 'Ravi', age: 25 });

const updateAge = () => {
  setUser(prev => ({ ...prev, age: 30 }));
};
        `}</code>
      </pre>
      <p><strong>üìå Telugu:</strong> React ‡∞≤‡±ã immutable state update ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø ‡∞Ö‡∞Ç‡∞ü‡±á spread operator ‡∞§‡∞™‡±ç‡∞™‡∞®‡∞ø‡∞∏‡∞∞‡∞ø.</p>

      <h3 style={{ color: '#d35400' }}>‚úÖ Summary ‚Äì ‡∞é‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞µ‡∞æ‡∞°‡∞æ‡∞≤‡∞ø?</h3>
      <ul>
        <li>‚úÖ Clone ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‚Üí Array/Object</li>
        <li>‚úÖ Merge ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‚Üí Arrays ‡∞≤‡±á‡∞¶‡∞æ Objects</li>
        <li>‚úÖ Object property override ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø</li>
        <li>‚úÖ React state update ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø</li>
      </ul>

      <h3 style={{ color: '#0070f3' }}>üî• Real-Time Use Cases in React</h3>
      <ul>
        <li><strong>Form values update ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç‡∞≤‡±ã</strong> ‚Äì useState ‡∞≤‡±ã object spread ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø</li>
        <li><strong>Table ‡∞≤‡±á‡∞¶‡∞æ Lists update ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç</strong> ‚Äì array spread</li>
        <li><strong>Redux reducers</strong> ‚Äì state ‡∞®‡∞ø update ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç</li>
      </ul>
    </div>
  );
};

export default SpreadOperatorGuide;
