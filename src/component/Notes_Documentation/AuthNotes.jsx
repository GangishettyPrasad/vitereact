import React from 'react';

/**
 * ‚úÖ AUTH NOTES COMPONENT
 * Single file with Axios setup, Login page, Profile API usage, and Routing explained in UI.
 * Telugu + Code shown in <pre> format for easy learning.
 */
const AuthNotes = () => {
  return (
    <div style={{ fontFamily: 'monospace', padding: '20px' }}>
      <h5>üìò React Token Authentication Guide (Code Notes)</h5>

      {/* 1Ô∏è‚É£ Axios Instance Setup */}
      <h2>1Ô∏è‚É£ AxiosInstance.js ‚Äì Axios Setup with Token</h2>
      <pre style={style}>
{`// axiosInstance.js
import axios from 'axios';

const axiosInstance = axios.create();

axiosInstance.interceptors.request.use((config) => {
  const token = localStorage.getItem('authToken');
  if (token) {
    config.headers.Authorization = \`Bearer \${token}\`;
  }
  return config;
});

export default axiosInstance;
`}
      </pre>
      <p><strong>üóíÔ∏è Telugu Explanation:</strong><br />
        ‚úÖ Axios instance ‡∞§‡∞Ø‡∞æ‡∞∞‡±Å ‡∞ö‡±á‡∞∏‡∞ø, ‡∞™‡±ç‡∞∞‡∞§‡∞ø API ‡∞ï‡∞æ‡∞≤‡±ç ‡∞≤‡±ã token attach ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø interceptor ‡∞µ‡∞æ‡∞°‡∞æ‡∞Ç.<br />
        ‚úÖ ‡∞¶‡±Ä‡∞®‡±ç‡∞®‡∞ø ‡∞Ö‡∞®‡±ç‡∞®‡∞ø pages/components ‡∞≤‡±ã reuse ‡∞ö‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å.</p>

      {/* 2Ô∏è‚É£ Login Page */}
      <h2>2Ô∏è‚É£ TokenLogin.jsx ‚Äì Login Page with Token Storage</h2>
      <pre style={style}>
{`// TokenLogin.jsx
import React, { useState } from 'react';
import axios from 'axios';

const TokenLogin = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleLogin = async () => {
    setLoading(true);
    try {
      const response = await axios.post('https://api.example.com/login', {
        username,
        password
      });

      localStorage.setItem('authToken', response.data.token);
      alert('Login successful!');
    } catch (err) {
      setError('Invalid username or password');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div>
      <input value={username} onChange={(e) => setUsername(e.target.value)} placeholder="Username" />
      <input value={password} onChange={(e) => setPassword(e.target.value)} type="password" placeholder="Password" />
      <button onClick={handleLogin}>Login</button>
      {error && <p>{error}</p>}
    </div>
  );
};

export default TokenLogin;
`}
      </pre>
      <p><strong>üóíÔ∏è Telugu Explanation:</strong><br />
        üîê ‡∞Ø‡±Ç‡∞ú‡∞∞‡±ç ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞ö‡±á‡∞∏‡±ç‡∞§‡∞æ‡∞°‡±Å ‚Üí API ‡∞ï‡∞ø request ‡∞™‡∞Ç‡∞™‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Ç ‚Üí ‡∞ü‡±ã‡∞ï‡±Ü‡∞®‡±ç ‡∞µ‡∞∏‡±ç‡∞§‡±á localStorage ‡∞≤‡±ã ‡∞®‡∞ø‡∞≤‡±ç‡∞µ ‡∞ö‡±á‡∞∏‡±ç‡∞§‡∞æ‡∞Ç.<br />
        üîÅ ‡∞§‡∞∞‡±Å‡∞µ‡∞æ‡∞§ protected pages ‡∞≤‡±ã ‡∞ü‡±ã‡∞ï‡±Ü‡∞®‡±ç ‡∞µ‡∞æ‡∞°‡±Å‡∞§‡∞æ‡∞Ç.</p>

      {/* 3Ô∏è‚É£ Protected API Usage */}
      <h2>3Ô∏è‚É£ UserProfile.jsx ‚Äì Protected API Call Using Token</h2>
      <pre style={style}>
{`// UserProfile.jsx
import React, { useEffect, useState } from 'react';
import axiosInstance from './axiosInstance';

const UserProfile = () => {
  const [profile, setProfile] = useState(null);
  const [error, setError] = useState('');

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await axiosInstance.get('/profile');
        setProfile(res.data);
      } catch (err) {
        setError('Token expired or invalid');
      }
    };

    fetchData();
  }, []);

  return (
    <div>
      {error && <p>{error}</p>}
      {profile && <pre>{JSON.stringify(profile, null, 2)}</pre>}
    </div>
  );
};

export default UserProfile;
`}
      </pre>
      <p><strong>üóíÔ∏è Telugu Explanation:</strong><br />
        üîí Login ‡∞ú‡∞∞‡∞ø‡∞ó‡∞ø‡∞® ‡∞§‡∞∞‡±Å‡∞µ‡∞æ‡∞§ ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞à API ‡∞™‡∞®‡∞ø‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.<br />
        ‚úÖ axiosInstance ‡∞ü‡±ã‡∞ï‡±Ü‡∞®‡±ç‚Äå‡∞§‡±ã beraber request ‡∞™‡∞Ç‡∞™‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.<br />
        ‚úÖ Server ‡∞ü‡±ã‡∞ï‡±Ü‡∞®‡±ç‚Äå‡∞®‡±Å ‡∞µ‡±Ü‡∞∞‡∞ø‡∞´‡±à ‡∞ö‡±á‡∞∏‡∞ø ‡∞°‡±á‡∞ü‡∞æ ‡∞™‡∞Ç‡∞™‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.</p>

      {/* 4Ô∏è‚É£ App.js with Routing */}
      <h2>4Ô∏è‚É£ App.js ‚Äì Main App Routing (Optional)</h2>
      <pre style={style}>
{`// App.js
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import TokenLogin from './TokenLogin';
import UserProfile from './UserProfile';

function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<TokenLogin />} />
        <Route path="/profile" element={<UserProfile />} />
      </Routes>
    </Router>
  );
}

export default App;
`}
      </pre>
      <p><strong>üóíÔ∏è Telugu Explanation:</strong><br />
        üö¶ React Router ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ pages navigate ‡∞Ö‡∞µ‡±Å‡∞§‡∞æ‡∞Ø‡∞ø.<br />
        üëâ Login ‡∞™‡±á‡∞ú‡±Ä root (/) ‡∞≤‡±ã ‡∞â‡∞Ç‡∞ü‡±Å‡∞Ç‡∞¶‡∞ø.<br />
        üëâ Profile ‡∞™‡±á‡∞ú‡±Ä‡∞ï‡±Å access ‡∞á‡∞ö‡±ç‡∞ö‡±á ‡∞Æ‡±Å‡∞Ç‡∞¶‡±Å user login ‡∞Ö‡∞Ø‡±ç‡∞Ø‡∞æ‡∞°‡∞æ ‡∞Ö‡∞®‡±á ‡∞µ‡∞ø‡∞∑‡∞Ø‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞µ‡±Ü‡∞∞‡∞ø‡∞´‡±à ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø.</p>
    </div>
  );
};

const style = {
  background: '#f4f4f4',
  padding: '12px',
  borderRadius: '8px',
  overflowX: 'auto',
  marginBottom: '20px',
  fontSize: '14px',
};

export default AuthNotes;
