import React, { useState, useRef } from 'react';

function VoiceRecorderUploader() {
  const [voiceFile, setVoiceFile] = useState(null); // ‡∞´‡±à‡∞≤‡±ç ‡∞∏‡±Ü‡∞≤‡±Ü‡∞ï‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞∏‡∞ø‡∞®‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å
  const [recording, setRecording] = useState(false); // ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡∞ø‡∞Ç‡∞ó‡±ç ‡∞∏‡±ç‡∞ü‡±á‡∞ü‡∞∏‡±ç
  const [mediaRecorder, setMediaRecorder] = useState(null); // ‡∞Æ‡±à‡∞ï‡±ç‡∞∞‡±ã‡∞´‡±ã‡∞®‡±ç ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡∞∞‡±ç
  const [audioUrl, setAudioUrl] = useState(null); // ‡∞™‡±ç‡∞≤‡±á‡∞¨‡±ç‡∞Ø‡∞æ‡∞ï‡±ç ‡∞ï‡±ã‡∞∏‡∞Ç
  const chunks = useRef([]); // ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞®‡±ç‡∞® ‡∞°‡±á‡∞ü‡∞æ ‡∞∏‡±ç‡∞ü‡±ã‡∞∞‡±ç

  // ‡∞´‡±à‡∞≤‡±ç ‡∞∏‡±Ü‡∞≤‡±Ü‡∞ï‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞∏‡∞ø‡∞®‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å
  const handleFileChange = (e) => {
    setVoiceFile(e.target.files[0]);
    setAudioUrl(URL.createObjectURL(e.target.files[0]));
  };

  // ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡∞ø‡∞Ç‡∞ó‡±ç ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡±Å
  const startRecording = async () => {
    try {
      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
      const recorder = new MediaRecorder(stream);
      recorder.ondataavailable = (e) => {
        chunks.current.push(e.data);
      };
      recorder.onstop = () => {
        const blob = new Blob(chunks.current, { type: 'audio/webm' });
        const url = URL.createObjectURL(blob);
        setAudioUrl(url);
        setVoiceFile(blob);
        chunks.current = [];
      };
      recorder.start();
      setMediaRecorder(recorder);
      setRecording(true);
    } catch (error) {
      console.error('Mic Access Error:', error);
    }
  };

  // ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡∞ø‡∞Ç‡∞ó‡±ç ‡∞Ü‡∞™‡±Å
  const stopRecording = () => {
    if (mediaRecorder) {
      mediaRecorder.stop();
      setRecording(false);
    }
  };

  // ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞Ö‡∞™‡±ç‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç
  const uploadVoice = async () => {
    if (!voiceFile) {
      alert('‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞´‡±à‡∞≤‡±ç ‡∞∏‡±Ü‡∞≤‡±Ü‡∞ï‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø ‡∞≤‡±á‡∞¶‡∞æ ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø!');
      return;
    }

    const formData = new FormData();
    formData.append('file', voiceFile);

    try {
      const response = await fetch('https://your-api.com/upload', {
        method: 'POST',
        body: formData,
      });

      if (response.ok) {
        alert('‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞Ö‡∞™‡±ç‡∞≤‡±ã‡∞°‡±ç ‡∞µ‡∞ø‡∞ú‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Ç!');
      } else {
        alert('‡∞Ö‡∞™‡±ç‡∞≤‡±ã‡∞°‡±ç ‡∞µ‡∞ø‡∞´‡∞≤‡∞Æ‡±à‡∞Ç‡∞¶‡∞ø!');
      }
    } catch (error) {
      console.error('Upload Error:', error);
    }
  };

  return (
    <div style={{ padding: '30px', fontFamily: 'Arial' }}>
      <h1 style={{ textAlign: 'center', color: '#4A90E2' }}>üé§ ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç ‡∞≤‡±á‡∞¶‡∞æ ‡∞Ö‡∞™‡±ç‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç</h1>

      {/* File Selection */}
      <section style={{ marginBottom: '20px', padding: '20px', backgroundColor: '#e1f7d5', borderRadius: '10px' }}>
        <h2>üìÇ ‡∞´‡±à‡∞≤‡±ç ‡∞®‡±Å‡∞Ç‡∞°‡∞ø ‡∞Ö‡∞™‡±ç‡∞≤‡±ã‡∞°‡±ç</h2>
        <input type="file" accept="audio/*" onChange={handleFileChange} />
        <p>‡∞í‡∞ï ‡∞á‡∞™‡±ç‡∞™‡∞ü‡∞ø‡∞ï‡±á ‡∞â‡∞®‡±ç‡∞® ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞´‡±à‡∞≤‡±ç ‡∞®‡∞ø ‡∞é‡∞Ç‡∞™‡∞ø‡∞ï ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.</p>
      </section>

      {/* Recording */}
      <section style={{ marginBottom: '20px', padding: '20px', backgroundColor: '#fce4ec', borderRadius: '10px' }}>
        <h2>üéôÔ∏è ‡∞¨‡±ç‡∞∞‡±å‡∞ú‡∞∞‡±ç ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç</h2>
        {!recording ? (
          <button onClick={startRecording} style={{ padding: '10px 20px', backgroundColor: '#4CAF50', color: '#fff', border: 'none', borderRadius: '5px' }}>
            ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø
          </button>
        ) : (
          <button onClick={stopRecording} style={{ padding: '10px 20px', backgroundColor: '#f44336', color: '#fff', border: 'none', borderRadius: '5px' }}>
            ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞Ü‡∞™‡±Å
          </button>
        )}
        <p>‡∞Æ‡±Ä‡∞∞‡±Å ‡∞®‡±á‡∞∞‡±Å‡∞ó‡∞æ ‡∞Æ‡±à‡∞ï‡±ç‡∞∞‡±ã‡∞´‡±ã‡∞®‡±ç ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞∞‡∞ø‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å.</p>
      </section>

      {/* Audio Preview */}
      {audioUrl && (
        <section style={{ marginBottom: '20px', padding: '20px', backgroundColor: '#f9f9f9', borderRadius: '10px' }}>
          <h2>üéß ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞™‡±ç‡∞≤‡±á ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø</h2>
          <audio controls src={audioUrl}></audio>
        </section>
      )}

      {/* Upload Button */}
      <section style={{ textAlign: 'center' }}>
        <button onClick={uploadVoice} style={{ padding: '15px 30px', backgroundColor: '#2196F3', color: '#fff', fontSize: '16px', border: 'none', borderRadius: '8px' }}>
          ‡∞µ‡∞æ‡∞Ø‡∞ø‡∞∏‡±ç ‡∞Ö‡∞™‡±ç‡∞≤‡±ã‡∞°‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø
        </button>
      </section>
    </div>
  );
}

export default VoiceRecorderUploader;
