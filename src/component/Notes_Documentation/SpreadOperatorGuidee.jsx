import React from 'react';

const SpreadOperatorGuidee = () => {
  return (
    <div style={{ padding: '2rem', fontFamily: 'Segoe UI, sans-serif', lineHeight: '1.8', background: '#f3f9f9' }}>
      <h2 style={{ color: '#4a148c' }}>üöÄ Spread Operator (...) ‚Äì JavaScript & React ‡∞≤‡±ã Full Guide (Telugu)</h2>
      <p>
        <strong>Spread Operator (...)</strong> ‡∞Ö‡∞®‡±á‡∞¶‡∞ø Arrays, Objects, & Function arguments ‡∞≤‡±ã values spread ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞∞‡±Å. ‡∞á‡∞¶‡∞ø Immutable updates ‡∞ï‡±ã‡∞∏‡∞Ç React ‡∞≤‡±ã ‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø‡∞Æ‡±à‡∞® concept.
      </p>

      <h3 style={{ color: '#00695c' }}>‚úÖ Basic Syntax:</h3>
      <pre><code>{`const newArray = [...oldArray];
const newObject = {...oldObject};`}</code></pre>

      <h3 style={{ color: '#00695c' }}>1Ô∏è‚É£ Array Copy (Shallow Copy)</h3>
      <pre><code>{`const fruits = ["apple", "banana"];
const newFruits = [...fruits];
console.log(newFruits); // ["apple", "banana"]`}</code></pre>
      <p>üëâ Original array modify ‡∞ï‡∞æ‡∞ï‡±Å‡∞Ç‡∞°‡∞æ copy ‡∞§‡∞Ø‡∞æ‡∞∞‡∞µ‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.</p>

      <h3 style={{ color: '#00695c' }}>2Ô∏è‚É£ Array Merge</h3>
      <pre><code>{`const a = [1, 2];
const b = [3, 4];
const result = [...a, ...b];
console.log(result); // [1, 2, 3, 4]`}</code></pre>

      <h3 style={{ color: '#00695c' }}>3Ô∏è‚É£ Adding Elements in Array</h3>
      <pre><code>{`const base = [2, 3];
const updated = [1, ...base, 4];
console.log(updated); // [1, 2, 3, 4]`}</code></pre>

      <h3 style={{ color: '#00695c' }}>4Ô∏è‚É£ Object Copy (Shallow)</h3>
      <pre><code>{`const user = { name: "Prasad", age: 25 };
const copy = { ...user };
console.log(copy); // { name: "Prasad", age: 25 }`}</code></pre>

      <h3 style={{ color: '#00695c' }}>5Ô∏è‚É£ Object Merge</h3>
      <pre><code>{`const a = { x: 1 };
const b = { y: 2 };
const merged = { ...a, ...b };
console.log(merged); // { x: 1, y: 2 }`}</code></pre>

      <h3 style={{ color: '#00695c' }}>6Ô∏è‚É£ Updating Object Properties (Immutable)</h3>
      <pre><code>{`const user = { name: "mounika", age: 24 };
const updated = { ...user, age: 25 };
console.log(updated); // { name: "mounika", age: 25 }`}</code></pre>
      <p>üëâ React state update ‡∞≤‡±ã ‡∞µ‡∞ø‡∞™‡∞∞‡±Ä‡∞§‡∞Ç‡∞ó‡∞æ ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞™‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.</p>

      <h3 style={{ color: '#00695c' }}>7Ô∏è‚É£ Spread in Function Arguments</h3>
      <pre><code>{`function sum(a, b, c) {
  return a + b + c;
}
const nums = [1, 2, 3];
console.log(sum(...nums)); // 6`}</code></pre>
      <p>üëâ Arrays ‡∞®‡±Å individual arguments ‡∞ó‡∞æ pass ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡±Ä ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Ç.</p>

      <h3 style={{ color: '#00695c' }}>8Ô∏è‚É£ React State Update (Array)</h3>
      <pre><code>{`const [tasks, setTasks] = useState(["Task 1"]);

const addTask = () => {
  setTasks(prev => [...prev, "Task 2"]);
};`}</code></pre>
      <p>üëâ Old state ‡∞®‡∞ø retain ‡∞ö‡±á‡∞∏‡∞ø ‡∞ï‡±ä‡∞§‡±ç‡∞§ item add ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç‡∞≤‡±ã ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Ç.</p>

      <h3 style={{ color: '#00695c' }}>9Ô∏è‚É£ React State Update (Object)</h3>
      <pre><code>{`const [user, setUser] = useState({ name: "A", age: 20 });

const updateAge = () => {
  setUser(prev => ({ ...prev, age: 21 }));
};`}</code></pre>
      <p>üëâ Object properties ‡∞®‡∞ø preserve ‡∞ö‡±á‡∞∏‡∞ø specific value update ‡∞ö‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å.</p>

      <h3 style={{ color: '#00695c' }}>üîö Summary & Tips:</h3>
      <ul>
        <li><strong>Spread Operator</strong> immutable updates ‡∞ï‡±ã‡∞∏‡∞Ç perfect tool</li>
        <li>React state update ‡∞≤‡±ã ‡∞ö‡∞æ‡∞≤‡∞æ ‡∞ï‡±Ä‡∞≤‡∞ï‡∞Ç</li>
        <li>Shallow copy ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø (nested structures ‡∞Ö‡∞Ø‡∞ø‡∞§‡±á deep copy ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Ç)</li>
        <li>Performance ‡∞ó‡∞æ efficient & readable</li>
      </ul>
    </div>
  );
};

export default SpreadOperatorGuidee;
