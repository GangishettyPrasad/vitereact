import React, { useState } from 'react';

// Sample JSON data with nested arrays and objects
const initialAuditLogs = [
  {
    logId: "LOG1001",
    user: "Ajay",
    action: "Updated Profile",
    timestamp: "2025-04-01T10:22:00Z",
    details: {
      fieldsUpdated: [
        { field: "email", oldValue: "old@example.com", newValue: "new@example.com" },
        { field: "mobile", oldValue: "1234567890", newValue: "9876543210" }
      ],
      location: "Office",
      ip: "192.168.1.1"
    }
  },
  {
    logId: "LOG1002",
    user: "Bhanu",
    action: "Reset Password",
    timestamp: "2025-04-02T15:30:00Z",
    details: {
      fieldsUpdated: [],
      location: "Home",
      ip: "192.168.1.2"
    }
  }
];

const AuditLogWithNestedData = () => {
  const [auditLogs, setAuditLogs] = useState(initialAuditLogs);
  const [editingLog, setEditingLog] = useState(null);
  const [newLog, setNewLog] = useState({
    logId: "",
    user: "",
    action: "",
    timestamp: "",
    details: {
      fieldsUpdated: [],
      location: "",
      ip: ""
    }
  });

  // Create a new audit log
  const handleCreate = () => {
    setAuditLogs([...auditLogs, newLog]);
    setNewLog({ logId: "", user: "", action: "", timestamp: "", details: { fieldsUpdated: [], location: "", ip: "" } });
  };

  // Update an existing audit log
  const handleUpdate = (logId) => {
    const updatedLogs = auditLogs.map((log) =>
      log.logId === logId ? { ...log, ...editingLog } : log
    );
    setAuditLogs(updatedLogs);
    setEditingLog(null);
  };

  // Delete a log
  const handleDelete = (logId) => {
    setAuditLogs(auditLogs.filter((log) => log.logId !== logId));
  };

  return (
    <div className="container mt-4">
      <h4>üîç Audit Log with Nested Arrays and Objects - CRUD Operations</h4>
    <div>Form Setup:

‡∞Æ‡±á‡∞Æ‡±Å ‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞≤‡∞æ‡∞ó‡±ç ‡∞ï‡±ç‡∞∞‡∞ø‡∞Ø‡±á‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞í‡∞ï ‡∞´‡∞æ‡∞∞‡∞Ç ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞Ç‡∞ö‡∞æ‡∞Ç. ‡∞á‡∞Ç‡∞¶‡±Å‡∞≤‡±ã logId, user, action, timestamp (‡∞§‡±á‡∞¶‡±Ä ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞Æ‡∞Ø‡∞Ç) ‡∞µ‡∞Ç‡∞ü‡∞ø ‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø‡∞Æ‡±à‡∞® ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç‡∞∏‡±ç ‡∞â‡∞Ç‡∞ü‡∞æ‡∞Ø‡∞ø.

‡∞Ö‡∞≤‡∞æ‡∞ó‡±á, details ‡∞Ö‡∞®‡±á ‡∞≠‡∞æ‡∞ó‡∞Ç ‡∞ï‡±Ç‡∞°‡∞æ ‡∞â‡∞Ç‡∞¶‡∞ø, ‡∞á‡∞¶‡∞ø ‡∞Ö‡∞®‡±á‡∞ï ‡∞≤‡±Ü‡∞ï‡±ç‡∞ï‡∞ø‡∞Ç‡∞™‡±Å ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç‡∞∏‡±ç‚Äå‡∞®‡±Å ‡∞ï‡∞≤‡∞ø‡∞ó‡∞ø ‡∞â‡∞Ç‡∞ü‡±Å‡∞Ç‡∞¶‡∞ø, ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£‡∞ï‡±Å, fieldsUpdated (‡∞Æ‡∞æ‡∞∞‡±ç‡∞™‡±Å ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç‡∞∏‡±ç), location (‡∞∏‡±ç‡∞•‡∞≤‡∞Ç), ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ip (‡∞ê‡∞™‡∞ø ‡∞Ö‡∞°‡±ç‡∞∞‡∞∏‡±ç).

Form Input:

‡∞Æ‡±Ä‡∞∞‡±Å ‡∞´‡∞æ‡∞∞‡∞Ç ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞á‡∞µ‡±ç‡∞µ‡∞ó‡∞≤‡∞∞‡±Å. ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£‡∞ï‡∞ø:

logId: ‡∞≤‡∞æ‡∞ó‡±ç ‡∞Ø‡±ä‡∞ï‡±ç‡∞ï ‡∞ó‡±Å‡∞∞‡±ç‡∞§‡∞ø‡∞Ç‡∞™‡±Å

user: ‡∞Ø‡±Ç‡∞ú‡∞∞‡±ç ‡∞™‡±á‡∞∞‡±Å

action: ‡∞Ø‡±Ç‡∞ú‡∞∞‡±ç ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞ö‡∞∞‡±ç‡∞Ø (‡∞â‡∞¶‡∞æ: "Updated Profile")

timestamp: ‡∞≤‡∞æ‡∞ó‡±ç ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞§‡±á‡∞¶‡±Ä ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞Æ‡∞Ø‡∞Ç

Add New Log:

"Add New Log" ‡∞¨‡∞ü‡∞®‡±ç‚Äå‡∞®‡±Å ‡∞ï‡±ç‡∞≤‡∞ø‡∞ï‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞à ‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞≤‡∞æ‡∞ó‡±ç ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞æ‡∞®‡±ç‡∞®‡∞ø auditLogs ‡∞≤‡∞ø‡∞∏‡±ç‡∞ü‡±ç ‡∞≤‡±ã ‡∞ú‡∞§‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.

Step 2: ‡∞≤‡∞æ‡∞ó‡±ç ‡∞∏‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ü‡∞Ç (Update Log)
Edit Option:

‡∞≤‡∞æ‡∞ó‡±ç‚Äå‡∞®‡±Å ‡∞∏‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Æ‡±Ä‡∞∞‡±Å "Edit" ‡∞¨‡∞ü‡∞®‡±ç‚Äå‡∞®‡±Å ‡∞ï‡±ç‡∞≤‡∞ø‡∞ï‡±ç ‡∞ö‡±á‡∞∏‡±ç‡∞§‡±á, ‡∞Ü ‡∞≤‡∞æ‡∞ó‡±ç ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç‡∞∏‡±ç ‡∞Ö‡∞®‡±ç‡∞®‡∞ø ‡∞é‡∞°‡∞ø‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞§‡±Ü‡∞∞‡∞µ‡∞¨‡∞°‡∞§‡∞æ‡∞Ø‡∞ø.

Update Fields:

‡∞Æ‡±Ä‡∞∞‡±Å ‡∞∏‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞é‡∞°‡∞ø‡∞ü‡±ç ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç‡∞∏‡±ç‚Äå‡∞®‡±Å ‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞µ‡∞ø‡∞≤‡±Å‡∞µ‡∞≤‡∞§‡±ã ‡∞Ö‡∞™‡±ç‚Äå‡∞°‡±á‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å. ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£‡∞ï‡∞ø:

user: ‡∞Ø‡±Ç‡∞ú‡∞∞‡±ç ‡∞™‡±á‡∞∞‡±Å

action: ‡∞ö‡∞∞‡±ç‡∞Ø

timestamp: ‡∞§‡±á‡∞¶‡±Ä/‡∞∏‡∞Æ‡∞Ø‡∞Ç

Save Changes:

‡∞Ü ‡∞§‡∞∞‡±ç‡∞µ‡∞æ‡∞§, "Update Log" ‡∞¨‡∞ü‡∞®‡±ç‚Äå‡∞®‡±Å ‡∞ï‡±ç‡∞≤‡∞ø‡∞ï‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞∏‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞≤‡∞æ‡∞ó‡±ç‚Äå‡∞®‡±Å auditLogs ‡∞≤‡±ã ‡∞™‡±Å‡∞®‡∞É‡∞∏‡±ç‡∞•‡∞æ‡∞™‡∞ø‡∞Ç‡∞ö‡∞µ‡∞ö‡±ç‡∞ö‡±Å.

Step 3: ‡∞≤‡∞æ‡∞ó‡±ç ‡∞§‡±Ä‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡∞ü‡∞Ç (Delete Log)
Delete Option:

"Delete" ‡∞¨‡∞ü‡∞®‡±ç‚Äå‡∞®‡±Å ‡∞ï‡±ç‡∞≤‡∞ø‡∞ï‡±ç ‡∞ö‡±á‡∞∏‡∞ø, ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞Ü ‡∞≤‡∞æ‡∞ó‡±ç‚Äå‡∞®‡±Å ‡∞§‡±Ä‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å.

Remove Log:

‡∞≤‡∞æ‡∞ó‡±ç ‡∞§‡±Ä‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡∞°‡∞Ç ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ, ‡∞Ü ‡∞≤‡∞æ‡∞ó‡±ç auditLogs ‡∞®‡±Å‡∞Ç‡∞°‡∞ø ‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞ø‡∞ó‡∞æ ‡∞§‡±ä‡∞≤‡∞ó‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.

Step 4: ‡∞≤‡∞æ‡∞ó‡±ç‚Äå‡∞®‡±Å ‡∞™‡±ç‡∞∞‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞Ç‡∞ö‡∞ü‡∞Ç (Display Logs)
Rendering Logs:

‡∞Æ‡±á‡∞Æ‡±Å ‡∞Ö‡∞®‡±ç‡∞®‡∞ø ‡∞≤‡∞æ‡∞ó‡±ç‡∞∏‡±ç‚Äå‡∞®‡±Å UI‡∞≤‡±ã ‡∞ö‡±Ç‡∞™‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Æ‡±Å. ‡∞™‡±ç‡∞∞‡∞§‡∞ø ‡∞≤‡∞æ‡∞ó‡±ç ‡∞Ø‡±ä‡∞ï‡±ç‡∞ï ‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø‡∞Æ‡±à‡∞® ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å user, action, timestamp, location, ip ‡∞™‡±ç‡∞∞‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Æ‡±Å.

Nested Fields:

fieldsUpdated ‡∞Ö‡∞®‡±á ‡∞≠‡∞æ‡∞ó‡∞Ç‡∞≤‡±ã ‡∞â‡∞®‡±ç‡∞® ‡∞Æ‡∞æ‡∞∞‡±ç‡∞™‡±Å‡∞≤‡±Å ‡∞í‡∞ï ‡∞™‡∞ü‡±ç‡∞ü‡∞ø‡∞ï‡∞≤‡±ã ‡∞ö‡±Ç‡∞™‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Æ‡±Å. ‡∞á‡∞¶‡∞ø ‡∞∏‡±à‡∞ü‡±ç‡∞≤‡±ã ‡∞Æ‡∞æ‡∞∞‡±ç‡∞™‡±Å‡∞≤‡±Å ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç‡∞∏‡±ç ‡∞®‡±Å ‡∞á‡∞®‡±ç‡∞®‡∞∞‡±ç‡∞≤‡∞§‡±ã ‡∞ö‡±Ç‡∞™‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.

Step 5: Nested Arrays & Objects Handling
Nested JSON Structure:

‡∞à ‡∞≤‡∞æ‡∞ó‡±ç‡∞∏‡±ç ‡∞≤‡±ã‡∞®‡∞ø details ‡∞Ö‡∞®‡±á ‡∞≠‡∞æ‡∞ó‡∞Ç‡∞≤‡±ã ‡∞Ö‡∞®‡±á‡∞ï "fieldsUpdated" ‡∞Ö‡∞®‡±á nested array ‡∞â‡∞Ç‡∞ü‡±Å‡∞Ç‡∞¶‡∞ø. ‡∞á‡∞¶‡∞ø ‡∞è‡∞µ‡±à‡∞®‡∞æ ‡∞Æ‡∞æ‡∞∞‡±ç‡∞™‡±Å‡∞≤‡±Å ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç‡∞∏‡±ç‚Äå‡∞®‡±Å ‡∞â‡∞Ç‡∞ö‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.

‡∞™‡±ç‡∞∞‡∞§‡∞ø ‡∞´‡±Ä‡∞≤‡±ç‡∞°‡±ç field, oldValue, ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å newValue ‡∞ï‡∞≤‡∞ø‡∞ó‡∞ø ‡∞â‡∞Ç‡∞ü‡±Å‡∞Ç‡∞¶‡∞ø. ‡∞á‡∞¶‡∞ø ‡∞ö‡∞∞‡∞ø‡∞§‡±ç‡∞∞ (history) ‡∞®‡±Å ‡∞ü‡±ç‡∞∞‡∞æ‡∞ï‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç‡∞≤‡±ã ‡∞∏‡∞π‡∞æ‡∞Ø‡∞™‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.

Nested Array Rendering:

fieldsUpdated ‡∞Ö‡∞®‡±á array ‡∞≤‡±ã‡∞®‡∞ø ‡∞Æ‡∞æ‡∞∞‡±ç‡∞™‡±Å‡∞≤‡∞®‡±Å ‡∞í‡∞ï table ‡∞≤‡±ã ‡∞™‡±ç‡∞∞‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.

Step 6: ‡∞ï‡±ç‡∞∞‡∞ø‡∞Ø‡±á‡∞ü‡±ç, ‡∞∏‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞§‡±Ä‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡±Å (CRUD Operations)
Create: ‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞≤‡∞æ‡∞ó‡±ç‚Äå‡∞®‡±Å ‡∞∏‡±É‡∞∑‡±ç‡∞ü‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.

Read: ‡∞≤‡∞æ‡∞ó‡±ç‡∞≤‡∞®‡±Å UI‡∞≤‡±ã ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.

Update: ‡∞í‡∞ï ‡∞≤‡∞æ‡∞ó‡±ç‚Äå‡∞®‡±Å ‡∞é‡∞°‡∞ø‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.

Delete: ‡∞í‡∞ï ‡∞≤‡∞æ‡∞ó‡±ç‚Äå‡∞®‡±Å ‡∞§‡±Ä‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.

Step 7: ‡∞µ‡∞æ‡∞°‡∞ï‡∞Ç (Usage)
‡∞Æ‡±Ä‡∞∞‡±Å ‡∞à ‡∞ï‡±ç‡∞∞‡∞ø‡∞Ø‡∞æ‡∞§‡±ç‡∞Æ‡∞ï ‡∞≤‡∞æ‡∞ó‡±ç ‡∞µ‡±ç‡∞Ø‡∞µ‡∞∏‡±ç‡∞•‡∞®‡±Å ‡∞Ö‡∞≠‡∞ø‡∞µ‡±É‡∞¶‡±ç‡∞ß‡∞ø ‡∞ö‡±á‡∞∏‡∞ø‡∞® ‡∞§‡∞∞‡±ç‡∞µ‡∞æ‡∞§, ‡∞á‡∞¶‡∞ø ‡∞á‡∞§‡∞∞ ‡∞°‡±á‡∞ü‡∞æ‡∞®‡±Å ‡∞ï‡±Ç‡∞°‡∞æ CRUD ‡∞Ü‡∞™‡∞∞‡±á‡∞∑‡∞®‡±ç‡∞≤‡∞§‡±ã ‡∞π‡∞æ‡∞Ç‡∞°‡∞ø‡∞≤‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞™‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.

‡∞à ‡∞µ‡∞ø‡∞ß‡∞Ç‡∞ó‡∞æ ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞®‡±Ü‡∞ü‡±ç‚Äå‡∞µ‡∞∞‡±ç‡∞ï‡±ç‚Äå/‡∞°‡±á‡∞ü‡∞æ‡∞¨‡±á‡∞∏‡±ç‚Äå‡∞®‡∞ø ‡∞è‡∞¶‡±à‡∞®‡∞æ API ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ ‡∞ï‡∞®‡±Ü‡∞ï‡±ç‡∞ü‡±ç ‡∞ö‡±á‡∞∏‡∞ø, ‡∞°‡±á‡∞ü‡∞æ‡∞®‡±Å ‡∞™‡±ã‡∞∏‡±ç‡∞ü‡±Å (POST), ‡∞Ö‡∞™‡±ç‚Äå‡∞°‡±á‡∞ü‡±ç (PUT), ‡∞°‡∞ø‡∞≤‡±Ä‡∞ü‡±ç (DELETE) ‡∞ö‡±á‡∞Ø‡∞µ‡∞ö‡±ç‡∞ö‡±Å.

üí° ‡∞∏‡∞æ‡∞∞‡∞æ‡∞Ç‡∞∂‡∞Ç (Summary)
‡∞à ‡∞ï‡±ç‡∞∞‡∞ø‡∞Ø‡∞æ‡∞§‡±ç‡∞Æ‡∞ï ‡∞ü‡±á‡∞¨‡±Å‡∞≤‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å CRUD ‡∞Ü‡∞™‡∞∞‡±á‡∞∑‡∞®‡±ç‡∞≤‡±Å ‡∞Æ‡∞æ‡∞ï‡±Å ‡∞™‡±Ü‡∞¶‡±ç‡∞¶ JSON ‡∞°‡±á‡∞ü‡∞æ‡∞®‡±Å ‡∞®‡∞ø‡∞∞‡±ç‡∞µ‡∞π‡∞ø‡∞Ç‡∞ö‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞∏‡∞π‡∞æ‡∞Ø‡∞™‡∞°‡∞§‡∞æ‡∞Ø‡∞ø, ‡∞á‡∞¶‡∞ø ‡∞™‡±Ü‡∞¶‡±ç‡∞¶ ‡∞™‡±ç‡∞∞‡∞æ‡∞ú‡±Ü‡∞ï‡±ç‡∞ü‡±Å‡∞≤‡±ç‡∞≤‡±ã ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞™‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø, ‡∞é‡∞ï‡±ç‡∞ï‡∞°‡±à‡∞®‡∞æ Nested Arrays ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å Objects ‡∞â‡∞Ç‡∞°‡∞µ‡∞ö‡±ç‡∞ö‡±Å.

‡∞ï‡±ç‡∞∞‡∞ø‡∞Ø‡±á‡∞ü‡±ç, ‡∞∏‡∞µ‡∞∞‡∞ø‡∞Ç‡∞ö‡±Å, ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞§‡±Ä‡∞∏‡∞ø‡∞µ‡±á‡∞Ø‡±Å ‡∞Ü‡∞™‡∞∞‡±á‡∞∑‡∞®‡±ç‡∞≤‡±Å ‡∞ó‡∞Æ‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.</div>
      {/* Create New Log */}
      <div>
        <h5>‚úçÔ∏è Create New Log</h5>
        <input
          type="text"
          placeholder="Log ID"
          value={newLog.logId}
          onChange={(e) => setNewLog({ ...newLog, logId: e.target.value })}
        />
        <input
          type="text"
          placeholder="User"
          value={newLog.user}
          onChange={(e) => setNewLog({ ...newLog, user: e.target.value })}
        />
        <input
          type="text"
          placeholder="Action"
          value={newLog.action}
          onChange={(e) => setNewLog({ ...newLog, action: e.target.value })}
        />
        <input
          type="datetime-local"
          value={newLog.timestamp}
          onChange={(e) => setNewLog({ ...newLog, timestamp: e.target.value })}
        />
        <button onClick={handleCreate}>Add New Log</button>
      </div>

      {/* Edit Existing Log */}
      {editingLog && (
        <div>
          <h5>Edit Log</h5>
          <input
            type="text"
            value={editingLog.user}
            onChange={(e) => setEditingLog({ ...editingLog, user: e.target.value })}
          />
          <input
            type="text"
            value={editingLog.action}
            onChange={(e) => setEditingLog({ ...editingLog, action: e.target.value })}
          />
          <input
            type="datetime-local"
            value={editingLog.timestamp}
            onChange={(e) => setEditingLog({ ...editingLog, timestamp: e.target.value })}
          />
          <button onClick={() => handleUpdate(editingLog.logId)}>Update Log</button>
        </div>
      )}

      {/* Display Audit Logs */}
      {auditLogs.map((log) => (
        <div key={log.logId} className="mb-3 p-3 border rounded shadow-sm">
          <h5>{log.user} - {log.action}</h5>
          <p><strong>Time:</strong> {new Date(log.timestamp).toLocaleString()}</p>
          <p><strong>Location:</strong> {log.details.location}</p>
          <p><strong>IP Address:</strong> {log.details.ip}</p>

          {log.details.fieldsUpdated.length > 0 ? (
            <table className="table table-bordered table-sm">
              <thead>
                <tr>
                  <th>Field</th>
                  <th>Old Value</th>
                  <th>New Value</th>
                </tr>
              </thead>
              <tbody>
                {log.details.fieldsUpdated.map((change, index) => (
                  <tr key={index}>
                    <td>{change.field}</td>
                    <td>{change.oldValue}</td>
                    <td>{change.newValue}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          ) : (
            <p className="text-muted">No fields updated.</p>
          )}

          <button onClick={() => setEditingLog(log)}>Edit</button>
          <button onClick={() => handleDelete(log.logId)}>Delete</button>
        </div>
      ))}
    </div>
  );
};

export default AuditLogWithNestedData;
