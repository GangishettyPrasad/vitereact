import React from 'react';

const JsArrayMethodsDemo = () => {
  return (
    <div style={{ padding: '2rem', fontFamily: 'Segoe UI, sans-serif', lineHeight: '1.8', background: '#f8f9fa' }}>
      <h2 style={{ color: '#005aa7' }}>üìò JavaScript Array Methods, Spread Operator & Destructuring ‚Äì Telugu Explanation</h2>

      {/* 1Ô∏è‚É£ map() */}
      <h3 style={{ color: '#0d7c8c' }}>1Ô∏è‚É£ map() - Array Iteration</h3>
      <p><strong>Use:</strong> ‡∞™‡±ç‡∞∞‡∞§‡∞ø item ‡∞Æ‡±Ä‡∞¶ action ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø ‡∞Ö‡∞®‡±Å‡∞ï‡±Å‡∞Ç‡∞ü‡±á ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç</p>
      <pre>
        <code>
{`const numbers = [1, 2, 3, 4];
const doubled = numbers.map(num => num * 2); 
console.log(doubled); // [2, 4, 6, 8]`}
        </code>
      </pre>
      <p><strong>React Use:</strong> Lists render ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡±Ä Ideal (Ex: looping through users)</p>

      {/* 2Ô∏è‚É£ filter() */}
      <h3 style={{ color: '#0d7c8c' }}>2Ô∏è‚É£ filter() - Filter Specific Items</h3>
      <p><strong>Use:</strong> ‡∞ï‡±ä‡∞®‡±ç‡∞®‡∞ø elements ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Æ‡±à‡∞§‡±á ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç</p>
      <pre>
        <code>
{`const numbers = [1, 2, 3, 4];
const even = numbers.filter(num => num % 2 === 0);
console.log(even); // [2, 4]`}
        </code>
      </pre>

      {/* 3Ô∏è‚É£ find() */}
      <h3 style={{ color: '#0d7c8c' }}>3Ô∏è‚É£ find() - First Match Return</h3>
      <p><strong>Use:</strong> ‡∞í‡∞ï object/item match ‡∞Ö‡∞Ø‡±ç‡∞Ø‡±á first element ‡∞ï‡∞æ‡∞µ‡∞æ‡∞≤‡∞Ç‡∞ü‡±á</p>
      <pre>
        <code>
{`const users = [
  { id: 1, name: "Ravi" },
  { id: 2, name: "Teja" }
];
const user = users.find(u => u.id === 2);
console.log(user); // { id: 2, name: "Teja" }`}
        </code>
      </pre>

      {/* 4Ô∏è‚É£ Spread Operator */}
      <h3 style={{ color: '#0d7c8c' }}>4Ô∏è‚É£ Spread Operator (...) ‚Äì Copy/Expand Data</h3>
      <p><strong>Use:</strong> Arrays/objects copy ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø, merge ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø, modify ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø ‡∞Ö‡∞Ç‡∞ü‡±á</p>
      <pre>
        <code>
{`const arr = [1, 2];
const newArr = [...arr, 3];
console.log(newArr); // [1, 2, 3]

const user = { name: "Ravi" };
const newUser = { ...user, age: 25 };
console.log(newUser); // { name: "Ravi", age: 25 }`}
        </code>
      </pre>

      {/* 5Ô∏è‚É£ Destructuring */}
      <h3 style={{ color: '#0d7c8c' }}>5Ô∏è‚É£ Destructuring ‚Äì Variables ‡∞ó‡∞æ Values Extract ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç</h3>
      <p><strong>Use:</strong> Array/Object ‡∞®‡±Å‡∞Ç‡∞°‡∞ø values ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞°‡∞Ç easy ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø</p>
      <pre>
        <code>
{`const user = { name: "Ravi", age: 25 };
const { name, age } = user;
console.log(name); // Ravi

const arr = [10, 20];
const [a, b] = arr;
console.log(a); // 10`}
        </code>
      </pre>

      <h3 style={{ color: '#0d7c8c' }}>‚úÖ Summary</h3>
      <ul>
        <li><strong>map()</strong> ‚Äì Loop over all items ‚Üí returns new array</li>
        <li><strong>filter()</strong> ‚Äì Get subset of items ‚Üí returns new array</li>
        <li><strong>find()</strong> ‚Äì Get first matching item ‚Üí returns item (not array)</li>
        <li><strong>Spread (...)</strong> ‚Äì Copy or merge arrays/objects</li>
        <li><strong>Destructuring</strong> ‚Äì Extract values directly into variables</li>
      </ul>

      <p>üí° <strong>React ‡∞≤‡±ã ‡∞á‡∞µ‡∞®‡±ç‡∞®‡±Ä List rendering, State updates, Props destructure, Immutable updates ‡∞ï‡±ã‡∞∏‡∞Ç extensively ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç.</strong></p>
    </div>
  );
};

export default JsArrayMethodsDemo;
