import React, { useState } from 'react';

const ReactStateGuide = () => {
  const [user, setUser] = useState({
    name: 'Prasad',
    hobbies: ['coding', 'music'],
    address: {
      city: 'Hyderabad',
      pincode: 500032
    }
  });

  const updateName = () => {
    setUser({ ...user, name: 'Prasad Kumar' });
  };

  const addHobby = () => {
    setUser({ ...user, hobbies: [...user.hobbies, 'travel'] });
  };

  const updateCity = () => {
    setUser({ ...user, address: { ...user.address, city: 'Vizag' } });
  };

  return (
    <div style={{ padding: '2rem', backgroundColor: '#f5faff', fontFamily: 'Segoe UI' }}>
      <h2 style={{ color: '#005aa7' }}>‚öõÔ∏è React State & Complex Data Updates (Telugu Guide)</h2>

      {/* 1. State Basics */}
      <h3 style={{ color: '#007d65' }}>1Ô∏è‚É£ useState ‚Äì Basic State Setup</h3>
      <p>
        React ‡∞≤‡±ã state ‡∞Ö‡∞®‡±á‡∞¶‡∞ø component-level data ‡∞®‡∞ø manage ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Ç.
        State change ‡∞Ö‡∞Ø‡±ç‡∞Ø‡±á ‡∞™‡±ç‡∞∞‡∞§‡∞ø ‡∞∏‡∞æ‡∞∞‡∞ø component re-render ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.
      </p>

      <pre style={{ background: '#e0f7fa', padding: '1rem' }}>
        <code>{`const [count, setCount] = useState(0);`}</code>
      </pre>

      {/* 2. Nested Object State */}
      <h3 style={{ color: '#007d65' }}>2Ô∏è‚É£ Nested Object State Update</h3>
      <p>
        Object ‡∞≤‡±ã nested structure (like address, profile) ‡∞â‡∞Ç‡∞ü‡±á <strong>spread operator</strong>‡∞§‡±ã carefully update ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø.
      </p>

      <pre style={{ background: '#e0f7fa', padding: '1rem' }}>
        <code>{`setUser({
  ...user,
  address: {
    ...user.address,
    city: 'Vizag'
  }
});`}</code>
      </pre>

      <button onClick={updateCity}>Update City</button>

      {/* 3. Array State Update */}
      <h3 style={{ color: '#007d65' }}>3Ô∏è‚É£ Array ‡∞≤‡±ã Values Add ‡∞ö‡±á‡∞Ø‡∞°‡∞Ç</h3>
      <p>
        State ‡∞≤‡±ã arrays update ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞Ç‡∞ü‡±á spread ‡∞ö‡±á‡∞∏‡∞ø ‡∞ï‡±ä‡∞§‡±ç‡∞§ array ‡∞á‡∞µ‡±ç‡∞µ‡∞æ‡∞≤‡∞ø (immutability).
      </p>

      <pre style={{ background: '#e0f7fa', padding: '1rem' }}>
        <code>{`setUser({
  ...user,
  hobbies: [...user.hobbies, 'travel']
});`}</code>
      </pre>

      <button onClick={addHobby}>Add Hobby</button>

      {/* 4. Complete Object Update */}
      <h3 style={{ color: '#007d65' }}>4Ô∏è‚É£ Name Update Example</h3>
      <p>
        Object level updates ‡∞ï‡±Ç‡∞°‡∞æ immutable ‡∞ó‡∞æ spread ‡∞ö‡±á‡∞∏‡∞ø ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø:
      </p>

      <pre style={{ background: '#e0f7fa', padding: '1rem' }}>
        <code>{`setUser({
  ...user,
  name: 'Prasad Kumar'
});`}</code>
      </pre>

      <button onClick={updateName}>Update Name</button>

      {/* 5. Real-Time Example */}
      <h3 style={{ color: '#007d65' }}>5Ô∏è‚É£ Real-Time Example: Nested Form State</h3>
      <p>
        Complex forms, user profiles, multi-step wizards ‡∞≤‡∞æ‡∞Ç‡∞ü‡∞ø features ‡∞≤‡±ã nested updates ‡∞ö‡∞æ‡∞≤‡∞æ ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞™‡∞°‡∞§‡∞æ‡∞Ø‡∞ø.
      </p>
      <ul>
        <li>‚úÖ Immutable Updates ‚Äì Clean state history</li>
        <li>‚úÖ Controlled inputs ‚Äì Consistent UI</li>
        <li>‚úÖ Best practice ‚Äì Avoid direct mutation</li>
      </ul>

      {/* 6. Displaying State */}
      <h3 style={{ color: '#007d65' }}>6Ô∏è‚É£ Live State Output</h3>
      <pre style={{ background: '#fff8e1', padding: '1rem' }}>
        <code>{JSON.stringify(user, null, 2)}</code>
      </pre>

      <p style={{ marginTop: '2rem', fontWeight: 'bold', color: '#005aa7' }}>
        üîÅ Next Step: <strong>üîÑ Advanced CRUD with Nested Structures</strong> JSX Guide ‡∞∞‡∞æ‡∞¨‡±ã‡∞§‡±Å‡∞Ç‡∞¶‡∞ø... proceed ‡∞ö‡±á‡∞Ø‡∞Æ‡∞Ç‡∞ü‡∞æ‡∞∞‡∞æ?
      </p>
    </div>
  );
};

export default ReactStateGuide;
