import React from 'react';

const JSObjectsGuide = () => {
  return (
    <div style={{ padding: '2rem', fontFamily: 'Segoe UI, sans-serif', background: '#f4f8fb', lineHeight: '1.8' }}>
      <h2 style={{ color: '#0d6efd' }}>üîç JavaScript & React ‡∞≤‡±ã Objects ‚Äì Full Guide (with Telugu Explanation)</h2>
      <p><strong>Objects</strong> ‡∞Ö‡∞®‡±á‡∞µ‡∞ø <code>key-value pairs</code> ‡∞Ü‡∞ß‡∞æ‡∞∞‡∞Ç‡∞ó‡∞æ ‡∞°‡±á‡∞ü‡∞æ ‡∞®‡±Å store ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡±Ä, access ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡±Ä ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Ç. React ‡∞≤‡±ã state, props, APIs ‡∞≤‡±ã objects ‡∞ö‡∞æ‡∞≤‡∞æ ‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø‡∞Æ‡±à‡∞®‡∞µ‡∞ø.</p>

      <h3 style={{ color: '#198754' }}>1Ô∏è‚É£ Basic Object Creation</h3>
      <pre><code>{`const person = {
  name: 'Prasad',
  age: 25
};`}</code></pre>
      <p><strong>Explanation:</strong> ‡∞á‡∞¶‡∞ø ‡∞í‡∞ï simple object. ‡∞á‡∞¶‡∞ø ‡∞í‡∞ï person ‡∞Ø‡±ä‡∞ï‡±ç‡∞ï ‡∞µ‡∞ø‡∞µ‡∞∞‡∞æ‡∞≤‡±Å ‡∞ï‡∞≤‡∞ø‡∞ó‡∞ø ‡∞â‡∞Ç‡∞¶‡∞ø.</p>

      <h3 style={{ color: '#198754' }}>2Ô∏è‚É£ Accessing Object Properties</h3>
      <pre><code>{`console.log(person.name); // Prasad
console.log(person['age']); // 25`}</code></pre>
      <p><strong>Explanation:</strong> Dot notation & bracket notation ‡∞∞‡±Ü‡∞Ç‡∞°‡±Ç values access ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞∏‡±ç‡∞§‡∞æ‡∞Ç.</p>

      <h3 style={{ color: '#198754' }}>3Ô∏è‚É£ Nested Objects Access</h3>
      <pre><code>{`const user = {
  name: 'Sneha',
  address: {
    city: 'Hyderabad',
    pincode: 500001
  }
};

console.log(user.address.city); // Hyderabad`}</code></pre>
      <p>Object ‡∞≤‡±ã object ‡∞â‡∞Ç‡∞ü‡±á nested structure ‡∞ó‡∞æ ‡∞â‡∞Ç‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.</p>

      <h3 style={{ color: '#198754' }}>4Ô∏è‚É£ Object Destructuring</h3>
      <pre><code>{`const { name, age } = person;
console.log(name); // Prasad`}</code></pre>
      <p>Direct ‡∞ó‡∞æ variables ‡∞≤‡±ã values assign ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞à ‡∞µ‡∞ø‡∞ß‡∞æ‡∞®‡∞Ç ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç.</p>

      <h3 style={{ color: '#198754' }}>5Ô∏è‚É£ Object Spread Operator</h3>
      <pre><code>{`const updatedPerson = {
  ...person,
  age: 26
};`}</code></pre>
      <p><strong>React ‡∞≤‡±ã ‡∞à ‡∞µ‡∞ø‡∞ß‡∞Ç‡∞ó‡∞æ immutable updates ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç.</strong></p>

      <h3 style={{ color: '#198754' }}>6Ô∏è‚É£ Looping through Object Properties</h3>
      <pre><code>{`for (let key in person) {
  console.log(key, person[key]);
}`}</code></pre>
      <p>Object ‡∞≤‡±ã ‡∞â‡∞®‡±ç‡∞® ‡∞Ö‡∞®‡±ç‡∞®‡∞ø properties ‡∞®‡∞ø iterate ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç.</p>

      <h3 style={{ color: '#198754' }}>7Ô∏è‚É£ Object.keys(), Object.values(), Object.entries()</h3>
      <pre><code>{`Object.keys(person); // ['name', 'age']
Object.values(person); // ['Prasad', 25]
Object.entries(person); // [['name', 'Prasad'], ['age', 25]]`}</code></pre>
      <p>‡∞à methods ‡∞§‡±ã object ‡∞®‡∞ø array ‡∞ó‡∞æ treat ‡∞ö‡±á‡∞∏‡∞ø ‡∞≤‡±Ç‡∞™‡±ç ‡∞≤‡±ã ‡∞µ‡∞æ‡∞°‡∞ö‡±ç‡∞ö‡±Å.</p>

      <h3 style={{ color: '#198754' }}>8Ô∏è‚É£ Object.freeze()</h3>
      <pre><code>{`const obj = Object.freeze({ name: 'React' });
obj.name = 'Angular'; // No effect`}</code></pre>
      <p><strong>Object.freeze()</strong> ‡∞¶‡±ç‡∞µ‡∞æ‡∞∞‡∞æ object immutable ‡∞Ö‡∞µ‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡∞ø.</p>

      <h3 style={{ color: '#198754' }}>9Ô∏è‚É£ Object.assign()</h3>
      <pre><code>{`const copy = Object.assign({}, person);`}</code></pre>
      <p>Old object ‡∞®‡∞ø clone ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç.</p>

      <h3 style={{ color: '#198754' }}>üîü Objects in React State</h3>
      <pre><code>{`const [user, setUser] = useState({ name: '', email: '' });

const handleChange = (e) => {
  setUser({ ...user, [e.target.name]: e.target.value });
};`}</code></pre>
      <p><strong>React ‡∞≤‡±ã form values ‡∞≤‡±á‡∞¶‡∞æ nested updates ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞Ç‡∞ü‡±á object state structure ‡∞ö‡∞æ‡∞≤‡∞æ important.</strong></p>

      <h3 style={{ color: '#198754' }}>üîÅ Bonus: Optional Chaining (?.)</h3>
      <pre><code>{`console.log(user?.address?.city);`}</code></pre>
      <p>Object ‡∞≤‡±ã nested structure ‡∞â‡∞Ç‡∞ü‡±á, value ‡∞â‡∞Ç‡∞¶‡±ã ‡∞≤‡±á‡∞¶‡±ã check ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø safe ‡∞ó‡∞æ ‡∞µ‡∞æ‡∞°‡∞§‡∞æ‡∞Ç.</p>

      <h3 style={{ color: '#0d6efd' }}>‚úÖ Summary</h3>
      <ul>
        <li>Objects are core for React state, API data, and UI structure.</li>
        <li>Spread operator, destructuring, freeze, keys/values ‚Äì ‡∞Ö‡∞®‡±ç‡∞®‡±Ä must-know.</li>
        <li>Immutable updates + nested object handling = better performance in React.</li>
      </ul>
    </div>
  );
};

export default JSObjectsGuide;
